<?xml version="1.0" encoding="UTF-8"?>
<project name="org.eclipse.imp.smapi" default="build.update.jar" basedir=".">
	<import file="../org.eclipse.imp.runtime.feature/buildCommon.xml"/>
	<import file="../org.eclipse.imp.update/buildPluginCommon.xml"/>

	<target name="init" depends="properties">
		<loadfile property="plugin.id" srcfile="META-INF/MANIFEST.MF">
			<filterchain>
				<containsregex pattern="Bundle-SymbolicName:"/>
				<replaceregex pattern="Bundle-SymbolicName: ([^;]*)(;.*)?" replace="\1"/>
				<striplinebreaks/>
			</filterchain>
		</loadfile>
		<!-- <echo message="Plugin ID = ${plugin.id}"/> -->

		<loadfile property="plugin.version" srcfile="META-INF/MANIFEST.MF">
			<filterchain>
				<containsregex pattern="Bundle-Version:"/>
				<replaceregex pattern="Bundle-Version: (.*)" replace="\1"/>
				<striplinebreaks/>
			</filterchain>
		</loadfile>
		<!-- <echo message="Plugin version = ${plugin.version}"/> -->

		<loadfile property="javacSource" srcfile=".settings/org.eclipse.jdt.core.prefs">
			<filterchain>
				<containsregex pattern="org.eclipse.jdt.core.compiler.source"/>
				<replaceregex pattern="org.eclipse.jdt.core.compiler.source=(.*)" replace="\1"/>
				<striplinebreaks/>
			</filterchain>
		</loadfile>
		<echo message="Java source compatibility = ${javacSource}"/>

		<loadfile property="javacTarget" srcfile=".settings/org.eclipse.jdt.core.prefs">
			<filterchain>
				<containsregex pattern="org.eclipse.jdt.core.compiler.codegen.targetPlatform"/>
				<replaceregex pattern="org.eclipse.jdt.core.compiler.codegen.targetPlatform=(.*)" replace="\1"/>
				<striplinebreaks/>
			</filterchain>
		</loadfile>
		<echo message="Java target compatibility = ${javacTarget}"/>

		<property name="compilerArg" value=""/>

		<loadfile property="plugin.dependencies" srcfile="META-INF/MANIFEST.MF">
			<filterchain>
				<tokenfilter>
					<filetokenizer/>
					<replaceregex pattern=",[\r\n]* *" replace="," flags="gs"/>
				</tokenfilter>
				<containsregex pattern="Require-Bundle: "/>
				<replaceregex pattern="Require-Bundle: (.*)" replace="\1"/>
				<!-- Filter out Eclipse plugins that are handled by eclipse.build.path -->
				<replaceregex pattern="org\.eclipse\.compare[^,]*,?" replace="" flags="g"/>
				<replaceregex pattern="org\.eclipse\.core[^,]*,?"    replace="" flags="g"/>
				<replaceregex pattern="org\.eclipse\.jdt[^,]*,?"     replace="" flags="g"/>
				<replaceregex pattern="org\.eclipse\.jface[^,]*,?"   replace="" flags="g"/>
				<replaceregex pattern="org\.eclipse\.ltk[^,]*,?"     replace="" flags="g"/>
				<replaceregex pattern="org\.eclipse\.pde[^,]*,?"     replace="" flags="g"/>
				<replaceregex pattern="org\.eclipse\.search[^,]*,?"  replace="" flags="g"/>
				<replaceregex pattern="org\.eclipse\.team[^,]*,?"    replace="" flags="g"/>
				<replaceregex pattern="org\.eclipse\.text[^,]*,?"    replace="" flags="g"/>
				<replaceregex pattern="org\.eclipse\.ui[^,]*,?"      replace="" flags="g"/>
				<replaceregex pattern="org\.junit[^,]*,?"            replace="" flags="g"/>
				<!-- Make dependencies on "local" (non-Eclipse) plugins use a relative path -->
				<replaceregex pattern="lpg.runtime,?" replace="lpg.runtime.java,"/>
				<replaceregex pattern="([a-zA-Z0-9]+(\.[a-zA-Z0-9]+)*),?" replace="../\1/bin;../\1/classes;" flags="g"/>
			</filterchain>
		</loadfile>
		<echo message="Non-Eclipse Plugin dependencies:"/>
		<echo message="${plugin.dependencies}"/>

		<property name="plugin.jar.name" value="${plugin.id}_${plugin.version}.jar"/>
		<property name="plugin.zip.name" value="${plugin.id}_${plugin.version}.zip"/>
		<property name="plugin.src.zip" value="${plugin.id}src.zip"/>
		<property name="plugin.destination" value="${basedir}"/>
		<condition property="pluginTemp" value="${buildTempFolder}/plugins">
			<isset property="buildTempFolder"/>
		</condition>
		<property name="pluginTemp" value="${basedir}"/>
		<condition property="build.result.folder" value="${pluginTemp}/${plugin.id}">
			<isset property="buildTempFolder"/>
		</condition>
		<property name="build.result.folder" value="${basedir}"/>
		<property name="temp.folder" value="${basedir}/temp.folder"/>
	</target>

	<target name="properties" if="eclipse.running">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
	</target>

	<!-- ================================================================================= -->

	<target name="plugin.jar" depends="init" unless="${plugin.jar.name}" description="Create jar: ${plugin.jar.name}.">
		<delete dir="${temp.folder}/${plugin.jar.name}.bin"/>
		<mkdir dir="${temp.folder}/${plugin.jar.name}.bin"/>
		<!-- compile the source code -->
		<javac destdir="${temp.folder}/${plugin.jar.name}.bin" failonerror="${javacFailOnError}" verbose="${javacVerbose}" debug="${javacDebugInfo}" includeAntRuntime="no" bootclasspath="${bootclasspath}" source="${javacSource}" target="${javacTarget}"		>
			<compilerarg line="${compilerArg}"/>
			<classpath>
<!--			<pathelement path="../com.ibm.wala.shrike/com.ibm.wala.shrike_1.0.0.jar"/> -->
				<pathelement path="$(plugin.dependencies}"/>
				<pathelement path="${eclipse.build.path}"/>
			</classpath>
			<src path="src/"/>
		</javac>
		<!-- Copy necessary resources -->
		<copy todir="${temp.folder}/${plugin.jar.name}.bin" failonerror="true" overwrite="false">
			<fileset dir="src/" excludes="**/*.java,**/package.htm*"/>
		</copy>
		<mkdir dir="${build.result.folder}"/>
		<jar destfile="${build.result.folder}/${plugin.jar.name}" basedir="${temp.folder}/${plugin.jar.name}.bin"
			manifest="META-INF/MANIFEST.MF"/>
		<delete dir="${temp.folder}/${plugin.jar.name}.bin"/>
	</target>
</project>
